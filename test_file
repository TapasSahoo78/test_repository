{
    "thisWeek": [
        {
            "date": "2024-01-01",
            "dayName": "Monday",
            "shiftTimes": [
                {
                    "_id": "653a1f43faf92845e7b9e551",
                    "shift_day": "Monday",
                    "delivery_time_id": {
                        "_id": "64e5b0d24fbd45753d969967",
                        "shiftBreakUp": "Shift 4",
                        "fromTime": "11:00",
                        "toTime": "15:00",
                        "totalHours": 3,
                        "lateNightCharge": false,
                        "threeInOneStat": "2"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:11:47.396Z",
                    "updatedAt": "2024-01-01T06:31:46.340Z",
                    "__v": 0,
                    "set_limit": 5
                }
            ]
        },
        {
            "date": "2024-01-04",
            "dayName": "Thursday",
            "shiftTimes": [
                {
                    "_id": "6527d28a3a9f6108cbbc20f4",
                    "shift_day": "Thursday",
                    "delivery_time_id": {
                        "_id": "64e5b0d24fbd45753d969967",
                        "shiftBreakUp": "Shift 4",
                        "fromTime": "11:00",
                        "toTime": "15:00",
                        "totalHours": 3,
                        "lateNightCharge": false,
                        "threeInOneStat": "2"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-12T11:03:38.872Z",
                    "updatedAt": "2023-12-03T19:12:31.958Z",
                    "__v": 0,
                    "set_limit": 5
                }
            ]
        },
        {
            "date": "2024-01-07",
            "dayName": "Sunday",
            "shiftTimes": [
                {
                    "_id": "652bf4e5e2f57c48a755b794",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "64e51a07a7034f37a0afff9b",
                        "shiftBreakUp": "Shift 1",
                        "fromTime": "07:00",
                        "toTime": "08:00",
                        "totalHours": 1,
                        "lateNightCharge": false,
                        "threeInOneStat": "0"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-15T14:19:17.261Z",
                    "updatedAt": "2023-10-15T14:19:17.261Z",
                    "__v": 0
                },
                {
                    "_id": "652bf5c5e2f57c48a755b7bf",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "64e5b1094fbd45753d96996e",
                        "shiftBreakUp": "Shift 5",
                        "fromTime": "15:00",
                        "toTime": "17:00",
                        "totalHours": 2,
                        "lateNightCharge": false,
                        "threeInOneStat": "0"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-15T14:23:01.491Z",
                    "updatedAt": "2023-10-15T14:23:01.491Z",
                    "__v": 0
                },
                {
                    "_id": "653a24d4faf92845e7b9e8b9",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "64e51a28a7034f37a0afffa4",
                        "shiftBreakUp": "Shift 2",
                        "fromTime": "08:00",
                        "toTime": "09:00",
                        "totalHours": 1,
                        "lateNightCharge": false,
                        "threeInOneStat": "0"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:35:32.183Z",
                    "updatedAt": "2023-10-26T08:35:32.183Z",
                    "__v": 0
                },
                {
                    "_id": "653a24ddfaf92845e7b9e8c1",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "64e5b09f4fbd45753d96995a",
                        "shiftBreakUp": "Shift 3",
                        "fromTime": "09:00",
                        "toTime": "11:00",
                        "totalHours": 3,
                        "lateNightCharge": false,
                        "threeInOneStat": "0"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:35:41.696Z",
                    "updatedAt": "2023-10-26T08:35:41.696Z",
                    "__v": 0
                },
                {
                    "_id": "653a24e6faf92845e7b9e8c9",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "64e5b0d24fbd45753d969967",
                        "shiftBreakUp": "Shift 4",
                        "fromTime": "11:00",
                        "toTime": "15:00",
                        "totalHours": 3,
                        "lateNightCharge": false,
                        "threeInOneStat": "0"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:35:50.590Z",
                    "updatedAt": "2023-10-26T08:35:50.590Z",
                    "__v": 0
                },
                {
                    "_id": "653a24f0faf92845e7b9e8d1",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "653a13adfaf92845e7b9959c",
                        "shiftBreakUp": "Shift 6",
                        "fromTime": "17:00",
                        "toTime": "19:00",
                        "totalHours": 2,
                        "lateNightCharge": false,
                        "threeInOneStat": "1"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:36:00.199Z",
                    "updatedAt": "2023-10-26T08:36:00.199Z",
                    "__v": 0
                },
                {
                    "_id": "653a24f5faf92845e7b9e8d9",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "653a13edfaf92845e7b995bd",
                        "shiftBreakUp": "Dinner Peak",
                        "fromTime": "19:00",
                        "toTime": "23:00",
                        "totalHours": 4,
                        "lateNightCharge": false,
                        "threeInOneStat": "1"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:36:05.841Z",
                    "updatedAt": "2023-10-26T08:36:05.841Z",
                    "__v": 0
                },
                {
                    "_id": "653a24fbfaf92845e7b9e8e1",
                    "shift_day": "Sunday",
                    "delivery_time_id": {
                        "_id": "653a1525faf92845e7b995ce",
                        "shiftBreakUp": "Mid Night Shift 1",
                        "fromTime": "23:00",
                        "toTime": "23:59",
                        "totalHours": 1,
                        "lateNightCharge": false,
                        "threeInOneStat": "1"
                    },
                    "isActive": true,
                    "isDeleted": false,
                    "createdAt": "2023-10-26T08:36:11.778Z",
                    "updatedAt": "2023-10-26T08:36:11.778Z",
                    "__v": 0
                }
            ]
        }
    ]
}


    // ======================= this week =======================
    var thisWeek = [];
    // Iterate through the days of the week and push them into the array
    let currentDay = startOfWeekDate;

    while (currentDay <= endOfWeekDate) {
      let dateAndDay = {};
      dateAndDay.date = dateFns.format(currentDay, "yyyy-MM-dd");
      // Format the date to get the day name (e.g., "Monday", "Tuesday", etc.)
      // 'EEEE' represents the full day name
      let dayname = (dateAndDay.dayName = dateFns.format(currentDay, "EEEE"));

      let query = ShiftTimesModel.find({
        shift_day: dayname,
        isActive: true,
        isDeleted: false,
      });
      query = query.populate({
        path: "delivery_time_id",
        match: {
          isActive: true,
          isDeleted: false,
        },
        select: "shiftBreakUp fromTime toTime totalHours lateNightCharge",
      });

      // Execute the query with 'lean' option to get plain JavaScript objects
      let shiftTimes = await query.lean().exec();

      // Calculate the 'shiftOverStatus' based on current time and shift times
      shiftTimes = await Promise.all(
        shiftTimes.map(async (shift) => {
          const currentTime = new Date();
          // const fromTime = new Date(shift.delivery_time_id.fromTime);
          // const toTime = new Date(shift.delivery_time_id.toTime);
          const fromTimeParts = shift.delivery_time_id.fromTime.split(":");
          const toTimeParts = shift.delivery_time_id.toTime.split(":");

          const fromTime = dateFns.setHours(
            dateFns.setMinutes(new Date(), fromTimeParts[1]),
            fromTimeParts[0]
          );

          const toTime = dateFns.setHours(
            dateFns.setMinutes(new Date(), toTimeParts[1]),
            toTimeParts[0]
          );
          // returns true or false
          // shift.delivery_time_id.shiftOverStatus = currentTime > fromTime;

          // checks whether shift history is available or not
          let shiftHistoryExists = await super.getByCustomOptionsSingle(
            req,
            ShiftHistoryModel,
            {
              riderId: req.rider,
              shiftTimeId: shift._id,
              shiftDate: dateFns.format(currentDay, "yyyy-MM-dd"),

              cancelTime: null,
            }
          );

          // threeInOneStat ====> 0->ShiftOver, 1->AddBtn, 2->CancelBtn 5->Remove Prev Day
          shift.delivery_time_id.threeInOneStat = "1";
          // shift.delivery_time_id = {};
          if (shiftHistoryExists != null) {
            // shiftHistory available
            if (currentTime > toTime) {
              // shift endTime is over
              shift.delivery_time_id.threeInOneStat = "0";
              // shift.delivery_time_id = {};
            }
            shift.delivery_time_id.threeInOneStat = "2";
            // shift.delivery_time_id.threeInOneStat = "5555555555555";  //Todat Modified ---> 31.12.2024
          } else {
            if (
              dateFns.format(currentDay, "yyyy-MM-dd") <
              dateFns.format(currentTime, "yyyy-MM-dd")
            ) {
              shift.delivery_time_id.threeInOneStat = "5555555555555";
            }

            // shiftHistory NOT-available
            if (
              dateFns.format(currentDay, "yyyy-MM-dd") ==
              dateFns.format(currentTime, "yyyy-MM-dd")
            ) {
              // if loopingDate is todayDate
              if (currentTime > toTime) {
                // currentTime is more than shiftEndTime
                shift.delivery_time_id.threeInOneStat = "0";
                // shift.delivery_time_id = {};
              } else {
                // currentTime is less than shiftEndTime
                shift.delivery_time_id.threeInOneStat = "1";
              }
            }
          }

          // important
          return shift;
        })
      );

      if (shiftTimes.length > 0) {
        dateAndDay.shiftTimes = shiftTimes;
      } else {
        dateAndDay.shiftTimes = [];
      }

      thisWeek.push(dateAndDay);
      // increase the day by 1
      currentDay = dateFns.addDays(currentDay, 1);
    }

    // // thisWeek now doesnot contain items where (threeInOneStat = 0 for currentDate)
    // =================================================
    thisWeek = thisWeek.filter((day) => {
      // Check if the date is not equal to the current date and threeInOneStat is not 0
      return day.date !== todayDate ||
        day.shiftTimes.some(
          (shift) => shift.delivery_time_id.threeInOneStat !== '0'
        );
    });

    // Filter the array to remove objects with threeInOneStat equal to 0
    thisWeek.forEach((day) => {
      day.shiftTimes = day.shiftTimes.filter((shift) => shift.delivery_time_id.threeInOneStat !== "5555555555555");
    });

    // To remove days with no shifts, you can filter them out like this:
    thisWeek = thisWeek.filter((day) => day.shiftTimes.length > 0);

    return res.status(200).json({
      thisWeek
    });
